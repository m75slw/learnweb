if(typeof AWPageMounts=='undefined'){AWPageMounts={}};AWPageMounts['m009']=[{"name":"01-入门.md","path":"009-Sequelize/01-入门.md","content":"## 入门\r\n> 约定sequelize为实例，Sequelize为库本身\r\n\r\n### 介绍\r\nSequelize是一个基于`promise`的Node.js `ORM(Object-Relational Mapping)`,目前支持`Postgres`、`MySQL`、`MariaDB`、`SQLite`、`SQL Server`,具有强大的事务支持、关联关系、预读和延迟加载、读取复制等功能。遵从语义版本控制，支持`Node V10`以及更高版本。\r\n\r\n### egg中安装和配置\r\n\r\n**安装**\r\n```cmd\r\nnpm install --save egg-sequelize mysql2  \r\n\r\n```\r\n\r\n**在`config/plugin.js`中引入egg-sequelize插件**\r\n```js\r\nexports.sequelize = {\r\n    enable: true,\r\n    package: \'egg-sequelize\',\r\n};\r\n```\r\n\r\n**在`config/config.default.js`中配置插件**\r\n```js\r\nconfig.sequelize = {\r\n    dialect: \'mysql\', //数据源 mysql\r\n    host: \'localhost\', //host地址\r\n    user: \'root\',   //数据库用户名\r\n    password: \'000215\',//数据库密码\r\n    port: 3306, //端口号\r\n    database: \'aishe\',//数据库\r\n};\r\n```\r\n\r\n**在`app/model`目录下编写Model**\r\n```js\r\nmodule.exports = app =>{   //chapter.js\r\n    const { STRING, INTEGER, DATE } = app.Sequelize;\r\n    const Chapter = app.model.define(\'chapter\', {\r\n        chid: { type: INTEGER.UNSIGNED, primaryKey: true, autoIncrement: true },\r\n        chname: {type:STRING(50) ,allowNull:false},\r\n        chduration:{type:INTEGER,allowNull:false},\r\n        chvideo:{type:STRING,allowNull:false},\r\n        cid:{type:INTEGER,allowNull:false},\r\n    },{\r\n        tableName: \'chapter\',\r\n        timestamps: false\r\n    });\r\n    return Chapter;\r\n}\r\n```  \r\n**这个Model可以在Controller和Service中通过`app.model.Chapter`或`ctx.model.Chapter`访问**\r\n\r\n> 这里`app.model.Chapter`中的Chapter是js文件名  \r\n\r\n\r\n```md\r\n- 对数据库的操作写在Service下\r\n- 再在Ctroller中调用，处理\r\n- 最后将Ctroller挂载到路由\r\n\r\n```","timestamp":1635919853077},{"name":"02-模型基础.md","path":"009-Sequelize/02-模型基础.md","content":"## 概念\r\n**模型**是Sequelize的本质，模型是代表数据库中表的抽象。  \r\nSequelize中的模型有一个名称，不一定与表名相同，通常模型具有单数名称(例如user)，而表具有复数名称(例如users)，可配置\r\n\r\n### 模型定义\r\n- 调用`sequelize.define(modelName,attributes,options)`\r\n>先new一个实例，然后 `实例.define`  `实例.define` 会返回模型\r\n\r\n>egg中`app.model.define`\r\n\r\n- `modelName`定义模型名\r\n- `attributes`定义模型属性\r\n- `options`定义模型参数\r\n\r\n>然后define方法会返回模型，在`·实例.models.模型名`访问  ?\r\n\r\n>egg中在`app.model.js文件名`访问  \r\n\r\n","timestamp":1635919853077}]