if(typeof AWPageMounts=='undefined'){AWPageMounts={}};AWPageMounts['m005']=[{"name":"01-介绍.md","path":"005-Egg.js/01-介绍.md","content":"[TOC]\r\n\r\n## Egg.js是什么\r\n\r\nEgg是**为企业级框架和应用而生的**，可以降低开发团队和开发人员的维护成本。  \r\n### 设计原则\r\n\r\n- 一个插件只做一件事\r\n>比如ejs框架封装成egg-view-ejs插件，MySQL封装成egg-mysql。egg通过框架聚合并且可根据自己的业务场景配置。\r\n- 约定优于配置\r\n\r\n### 特性\r\n\r\n- 提供基于Egg定制上层框架的能力\r\n- 高度可扩展的插件价值\r\n- 内置多进程管理\r\n- 基于koa开发性能优异\r\n- 框架稳定测试覆盖率高\r\n- 渐进式开发\r\n\r\n## Egg.js与Koa\r\n### 异步编程模型\r\n\r\n为解决callback hell和relese zalgo使用async function，通过await关键字来等待一个promise被resolve(或者reject，此时会抛出异常)。\r\n\r\n### Koa与express不同\r\n- Middleware：Koa的中间件与express不同，Koa选择了洋葱模型\r\n- Context：express中使用request和response，Koa增加了一个Context对象\r\n- 异常处理：同步方式编写异步代码的好处，异常处理非常自然\r\n- Egg继承于Koa\r\n- Egg插件：extend拓展基础对象的上下文、middleware中间件、config配置各个环境下插件的默认配置项\r\n","timestamp":1635919853077},{"name":"02-快速入门.md","path":"005-Egg.js/02-快速入门.md","content":"[TOC]\r\n## 初始化\r\n\r\n### 生成项目\r\n```cmd\r\nmkdir egg-example && cd egg-example  新建文件夹并进入\r\nnpm init egg --type=simple  初始化 type可选\r\nnpm i  安装项目依赖                     \r\n```\r\n### 启动项目\r\n```cmd\r\nnpm run dev\r\nopen http://localhost:7001\r\n  \r\n或者在浏览器打开\r\n```\r\n\r\n### 目录结构\r\n```\r\negg-example\r\n|---package.json\r\n|---app.js(可选)\r\n|---agent.js(可选)\r\n|\r\n|---app\r\n|    |---controller    用于解析用户的输入、处理后返回响应的结果\r\n|    |       |---home.js\r\n|    |       |---其他自建的文件夹/文件\r\n|    |\r\n|    |---public(可选)    放置静态资源文件\r\n|    |      |---静态资源文件\r\n|    |\r\n|    |---view    放置模板文件V\r\n|    |    |---home.ejs\r\n|    |    |---视图文件\r\n|    |\r\n|    |---router.js    用于配置url路由规则C\r\n|    |\r\n|    |---service(可选)    用于编写业务逻辑层M\r\n|    |      |---user.js\r\n|    |\r\n|    |---middleware(可选)    用于编写中间件\r\n|    |        |---response_time.js\r\n|    |        \r\n|    |---schedule(可选)    用于定时任务\r\n|    |        |---my_task.js\r\n|    |\r\n|    |---extend(可选)    框架的扩展\r\n|           |---helper.js(可选)\r\n|           |---request.js(可选)\r\n|           |---response.js(可选)\r\n|           |---application.js(可选)\r\n|           |---agent.js(可选)\r\n|           \r\n|---config\r\n|      |---config.default.js    用于编写配置文件\r\n|      |---plugin.js    配置需要加载的插件\r\n|      |\r\n|      |---config.prod.js\r\n|      |---config.test.js(可选)\r\n|      |---config.local.js(可选)\r\n|      |---config.unittest.js(可选)\r\n|\r\n|---test    用于单元测试\r\n|    |---midddleware\r\n|    |        |---repons_time.test.js\r\n|    |\r\n|    |---controller\r\n|    |       |---home.test.js\r\n\r\n\r\n```\r\n\r\n\r\n\r\n## 项目搭建\r\n\r\n### 编写Controller和Router\r\n```js\r\n// app/controller/home.js\r\n\'use strict\';\r\n\r\nconst Controller = require(\'egg\').Controller;\r\n\r\nclass HomeController extends Controller {\r\n  async index() {\r\n    const { ctx } = this;\r\n    ctx.body = \'hi, egg\';\r\n  }\r\n}\r\n\r\nmodule.exports = HomeController;\r\n```\r\n配置路由映射\r\n```js\r\nmodule.exports = app => {\r\n  const { router, controller } = app;\r\n  router.get(\'/\', controller.home.index);\r\n  //管理端路由\r\n  router.get(\'/api/adminlogin\',controller.admin.login.login);\r\n};\r\n```\r\n### 静态资源\r\n```js\r\n  //app/public\r\n这个目录下存放html、css、img等静态资源\r\n```\r\n模板\r\n>npm i egg-view-ejs --save  \r\n开启插件，然后配置Controller和Router\r\n```js\r\n// config/plugin.js\r\nexports.ejs = {\r\n  enable: true,\r\n  package: \'egg-view-ejs\'\r\n};\r\n等价↓:\r\nmodule.exports = {\r\n  ejs:{\r\n    enable: true,\r\n    package: \'egg-view-ejs\'\r\n  }\r\n};\r\n```\r\n\r\n```js\r\n// config/config.default.js\r\nexports.keys = <此处改为你自己的 Cookie 安全字符串>;\r\n// 添加 view 配置\r\nexports.view = {\r\n  defaultViewEngine: \'ejs\',\r\n  mapping: {\r\n    \'.tpl\': \'ejs\',\r\n  },\r\n};\r\n等价↓\r\nmodule.exports = appInfo => {\r\n  \r\n  const config = exports = {};\r\n  config.keys = appInfo.name + \'_1634115019286_2172\';\r\n  config.middleware = [];\r\n  const userConfig = {\r\n  };\r\n  config.view = {\r\n    defaultViewEngine: \'ejs\',\r\n    mapping: {\r\n      \'.html\': \'ejs\',\r\n    },\r\n  };\r\n  return {\r\n    ...config,\r\n    ...userConfig,\r\n  };\r\n\r\n```\r\n### mysql的使用\r\n插件安装\r\n```cmd\r\nnpm i --save egg-mysql\r\n```\r\n开启插件\r\n```js\r\n// config/plugin.js\r\nexports.mysql = {\r\n  enable: true,\r\n  package: \'egg-mysql\',\r\n};\r\n```\r\n\r\n```js\r\n//config/config.default.js\r\n不同数据源不同配置\r\n```\r\n\r\n\r\n### 编写service,并在router中使用\r\n```js\r\n//app/service/Goods.js\r\n\'use strict\';\r\nconst Service =require(\'egg\').Service;\r\nclass GoodsService extends Service{\r\n    async index(){\r\n        let goods=await this.app.mysql.select(\'nav\',{\r\n            columns:[\'title\'],\r\n        });\r\n        return goods;\r\n    }\r\n}\r\nmodule.exports=GoodsService;\r\n```\r\n\r\n```js\r\n//app/controller/test.js\r\n\'use strict\';\r\nconst Controller = require(\'egg\').Controller;\r\nclass GoodsController extends Controller {\r\n    async index() {\r\n        let {ctx}=this;\r\n        let result=await ctx.service.goods.index();\r\n        // console.log(result);\r\n        // await ctx.render(\'html/Goods.html\');\r\n        ctx.body=result;\r\n    }\r\n  }\r\nmodule.exports = GoodsController;\r\n```\r\n\r\n### 编写拓展\r\n\r\n#### Application\r\n\r\n#### Context\r\n#### Request\r\n#### Response\r\n#### Helper  \r\n\r\n**方法拓展**  \r\n\r\n**属性拓展**  \r\n\r\n### 编写中间件\r\n\r\n","timestamp":1635919853077}]